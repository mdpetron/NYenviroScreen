triAddress,
LocationAddress,
TRI_FACILITY_ID,
YEAR,
CHEMICAL,
FACILITY_NAME_,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`5.3_WATER`,
TOTAL_RELEASES,
`8.8_ONE-TIME_RELEASE`,
ZIP,
STREET_ADDRESS,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.x,
INCIDENT_CAUSE,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
OneTime <- c("HURRICANE", "NATURAL PHENOMENON")
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(RefMatch_CAS_Abv$INCIDENT_CAUSE %in% OneTime & is.na(RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE`) |
RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE` < RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL,1,0)
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(is.na(RefMatch_CAS_Abv$Sec8.8_Error), 0, RefMatch_CAS_Abv$Sec8.8_Error)
RefMatch_CAS_Abv$Air_Error <- ifelse(RefMatch_CAS_Abv$MEDIUM_DESC == "AIR" &
RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL > (RefMatch_CAS_Abv$`5.1_FUGITIVE_AIR` + RefMatch_CAS_Abv$`5.2_STACK_AIR`)
,1,0)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Sec8.8_Error == 1, "Sec8.8", NA)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1, "Air Release",RefMatch_CAS_Abv$Error)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1 & RefMatch_CAS_Abv$Sec8.8_Error == 1, "Air Release, Sec8.8", RefMatch_CAS_Abv$Error)
#table 1
RefMatch_CAS_Abv <- RefMatch_CAS_Abv %>% select(SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
LocationAddress,
DESCRIPTION_OF_INCIDENT,
INCIDENT_CAUSE,
MEDIUM_DESC,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
TRI_FACILITY_ID,
CHEMICAL,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`8.8_ONE-TIME_RELEASE`,
Error)
NonRep_10K <- NonRep %>% filter(AMOUNT_OF_MATERIAL > 500)
NonRep_10K$CAS_NUMBER.x2 <- gsub('-', '', NonRep_10K$CAS_NUMBER.x)
# take only the reported CAS that are also reported in the other TRI set
TRICAS <- unique(TRIdat1$`CAS_#/COMPOUND_ID`)
NonRep_10K$CasMatch <- ifelse(NonRep_10K$CAS_NUMBER.x2 %in% TRICAS, 1, 0)
NonRep_10K$NameMatch <- ifelse(NonRep_10K$NAME_OF_MATERIAL.x %in% list313$NAMEINDEX | NonRep_10K$NAME_OF_MATERIAL.x %in% toupper(Synonyms$Substance.Name)
| NonRep_10K$NAME_OF_MATERIAL.x %in% toupper(Synonyms$Registry.Name) | NonRep_10K$NAME_OF_MATERIAL.x %in% toupper(Synonyms$Synonym.Name),
1,0)
NonRep_10K_cas <- NonRep_10K %>% filter(NameMatch > 0 | CasMatch > 0)
#lets cut it to a certain area and time (CRUMBS)
TX_LA_maybe <- NonRep_10K_cas %>% filter(time > "2017-08-17", time < "2017-10-01",
LOCATION_STATE %in% c("Texas", "TEXAS", "TX", "texas", "tx", "louisiana", "la", "LA", "Louisiana", "LOUISIANA")
| RESPONSIBLE_STATE %in% c("Texas", "TEXAS", "TX", "texas", "tx", "louisiana", "la", "LA", "Louisiana", "LOUISIANA") )
NonRep_10K_cas <- TX_LA_maybe %>% select(TRI_FACILITY_ID,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.y,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
View(NonRep_10K_cas)
mtst <- left_join(NonRep_10K_cas, TRIdat, by = c("TRI_FACILITY_ID", "NAME_OF_MATERIAL.x" = "CHEMICAL"))
View(mtst)
RefMatch_CAS_Abv <- left_join(RefMatch_CAS_Abv, mtst)
RefMatch_CAS_Abv <- TX_LA %>% select(DOC_CTRL_NUM,
triAddress,
LocationAddress,
TRI_FACILITY_ID,
YEAR,
CHEMICAL,
FACILITY_NAME_,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`5.3_WATER`,
TOTAL_RELEASES,
`8.8_ONE-TIME_RELEASE`,
ZIP,
STREET_ADDRESS,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.x,
INCIDENT_CAUSE,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
OneTime <- c("HURRICANE", "NATURAL PHENOMENON")
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(RefMatch_CAS_Abv$INCIDENT_CAUSE %in% OneTime & is.na(RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE`) |
RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE` < RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL,1,0)
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(is.na(RefMatch_CAS_Abv$Sec8.8_Error), 0, RefMatch_CAS_Abv$Sec8.8_Error)
RefMatch_CAS_Abv$Air_Error <- ifelse(RefMatch_CAS_Abv$MEDIUM_DESC == "AIR" &
RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL > (RefMatch_CAS_Abv$`5.1_FUGITIVE_AIR` + RefMatch_CAS_Abv$`5.2_STACK_AIR`)
,1,0)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Sec8.8_Error == 1, "Sec8.8", NA)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1, "Air Release",RefMatch_CAS_Abv$Error)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1 & RefMatch_CAS_Abv$Sec8.8_Error == 1, "Air Release, Sec8.8", RefMatch_CAS_Abv$Error)
#table 1
RefMatch_CAS_Abv <- RefMatch_CAS_Abv %>% select(SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
LocationAddress,
DESCRIPTION_OF_INCIDENT,
INCIDENT_CAUSE,
MEDIUM_DESC,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
TRI_FACILITY_ID,
CHEMICAL,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`8.8_ONE-TIME_RELEASE`,
Error)
RefMatch_CAS_Abv_maybe <- mtst %>% select(SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
LocationAddress,
DESCRIPTION_OF_INCIDENT,
INCIDENT_CAUSE,
MEDIUM_DESC,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
TRI_FACILITY_ID,
CHEMICAL,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`8.8_ONE-TIME_RELEASE`)
mtst$triAddress <- paste(mtst$STREET_ADDRESS, mtst$CITY, mtst$ST, mtst$ZIP, sep = ", ")
mtst$LocationAddress <- paste(mtst$LOCATION_ADDRESS, mtst$LOCATION_NEAREST_CITY, mtst$LOCATION_STATE, mtst$LOCATION_ZIP, sep = ", ")
RefMatch_CAS_Abv_maybe <- mtst %>% select(SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
LocationAddress,
DESCRIPTION_OF_INCIDENT,
INCIDENT_CAUSE,
MEDIUM_DESC,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
TRI_FACILITY_ID,
CHEMICAL,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`8.8_ONE-TIME_RELEASE`)
NonRep_10K_cas <- TX_LA_maybe %>% select(TRI_FACILITY_ID,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.y,
INCIDENT_CAUSE,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
mtst <- left_join(NonRep_10K_cas, TRIdat, by = c("TRI_FACILITY_ID", "NAME_OF_MATERIAL.x" = "CHEMICAL"))
mtst$CHEMICAL <- mtst$NAME_OF_MATERIAL.x
mtst$triAddress <- paste(mtst$STREET_ADDRESS, mtst$CITY, mtst$ST, mtst$ZIP, sep = ", ")
mtst$LocationAddress <- paste(mtst$LOCATION_ADDRESS, mtst$LOCATION_NEAREST_CITY, mtst$LOCATION_STATE, mtst$LOCATION_ZIP, sep = ", ")
RefMatch_CAS_Abv_maybe <- mtst %>% select(SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
LocationAddress,
DESCRIPTION_OF_INCIDENT,
INCIDENT_CAUSE,
MEDIUM_DESC,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
TRI_FACILITY_ID,
CHEMICAL,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`8.8_ONE-TIME_RELEASE`)
View(RefMatch_CAS_Abv_maybe)
RefMatch_CAS_Abv <- left_join(RefMatch_CAS_Abv, RefMatch_CAS_Abv_maybe)
RefMatch_CAS_Abv <- TX_LA %>% select(DOC_CTRL_NUM,
triAddress,
LocationAddress,
TRI_FACILITY_ID,
YEAR,
CHEMICAL,
FACILITY_NAME_,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`5.3_WATER`,
TOTAL_RELEASES,
`8.8_ONE-TIME_RELEASE`,
ZIP,
STREET_ADDRESS,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.x,
INCIDENT_CAUSE,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
OneTime <- c("HURRICANE", "NATURAL PHENOMENON")
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(RefMatch_CAS_Abv$INCIDENT_CAUSE %in% OneTime & is.na(RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE`) |
RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE` < RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL,1,0)
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(is.na(RefMatch_CAS_Abv$Sec8.8_Error), 0, RefMatch_CAS_Abv$Sec8.8_Error)
RefMatch_CAS_Abv$Air_Error <- ifelse(RefMatch_CAS_Abv$MEDIUM_DESC == "AIR" &
RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL > (RefMatch_CAS_Abv$`5.1_FUGITIVE_AIR` + RefMatch_CAS_Abv$`5.2_STACK_AIR`)
,1,0)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Sec8.8_Error == 1, "Sec8.8", NA)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1, "Air Release",RefMatch_CAS_Abv$Error)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1 & RefMatch_CAS_Abv$Sec8.8_Error == 1, "Air Release, Sec8.8", RefMatch_CAS_Abv$Error)
RefMatch_CAS_Abv <- RefMatch_CAS_Abv %>% select(SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
LocationAddress,
DESCRIPTION_OF_INCIDENT,
INCIDENT_CAUSE,
MEDIUM_DESC,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
TRI_FACILITY_ID,
CHEMICAL,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`8.8_ONE-TIME_RELEASE`,
Error)
#Product1
#first we take the latest example
write.csv(RefMatch_CAS_Abv, "C:/Users/Mike Petroni/Documents/NRC1abv7.csv")
table1 <- RefMatch_CAS_Abv %>% group_by(DOC_CTRL_NUM, CHEMICAL, FACILITY_NAME_, TRI_FACILITY_ID) %>%
summarise(Sec8.8_Error = max(Sec8.8_Error, na.rm = T),
Air_Error = max(Air_Error, na.rm = T)) %>% distinct()
RefMatch_CAS_Abv <- TX_LA %>% select(DOC_CTRL_NUM,
triAddress,
LocationAddress,
TRI_FACILITY_ID,
YEAR,
CHEMICAL,
FACILITY_NAME_,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`5.3_WATER`,
TOTAL_RELEASES,
`8.8_ONE-TIME_RELEASE`,
ZIP,
STREET_ADDRESS,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.x,
INCIDENT_CAUSE,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
OneTime <- c("HURRICANE", "NATURAL PHENOMENON")
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(RefMatch_CAS_Abv$INCIDENT_CAUSE %in% OneTime & is.na(RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE`) |
RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE` < RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL,1,0)
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(is.na(RefMatch_CAS_Abv$Sec8.8_Error), 0, RefMatch_CAS_Abv$Sec8.8_Error)
RefMatch_CAS_Abv$Air_Error <- ifelse(RefMatch_CAS_Abv$MEDIUM_DESC == "AIR" &
RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL > (RefMatch_CAS_Abv$`5.1_FUGITIVE_AIR` + RefMatch_CAS_Abv$`5.2_STACK_AIR`)
,1,0)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Sec8.8_Error == 1, "Sec8.8", NA)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1, "Air Release",RefMatch_CAS_Abv$Error)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1 & RefMatch_CAS_Abv$Sec8.8_Error == 1, "Air Release, Sec8.8", RefMatch_CAS_Abv$Error)
table1 <- RefMatch_CAS_Abv %>% group_by(DOC_CTRL_NUM, CHEMICAL, FACILITY_NAME_, TRI_FACILITY_ID) %>%
summarise(Sec8.8_Error = max(Sec8.8_Error, na.rm = T),
Air_Error = max(Air_Error, na.rm = T)) %>% distinct()
View(table1)
table1$Error <- ifelse(table1$Sec8.8_Error == 1, "Sec8.8", NA)
table1$Error <- ifelse(table1$Air_Error == 1, "Air Release",table1$Error)
table1$Error <- ifelse(table1$Air_Error == 1 & table1$Sec8.8_Error == 1, "Air Release, Sec8.8", table1$Error)
table1 <- table1 %>% select(DOC_CTRL_NUM, CHEMICAL, FACILITY_NAME_, TRI_FACILITY_ID, Error) %>% distinct()
View(table1)
write.csv(table1, "C:/Users/Mike Petroni/Documents/NRCtable1_2.csv")
n_distinct(RefMatch_CAS_Abv$TRI_FACILITY_ID)
R
n_distinct(RefMatch$PRIMARY_NAICS)
aspills <- readRDS("C:/Users/Mike Petroni/Documents/TRI Local/AllSpills90_17.rds")
#lets cut it to a certain area and time (CRUMBS)
TX_LA <- RefMatch %>% filter(time > "2017-08-16", time < "2017-10-01")
TX_LA$triAddress <- paste(TX_LA$STREET_ADDRESS, TX_LA$CITY, TX_LA$ST, TX_LA$ZIP, sep = ", ")
TX_LA$LocationAddress <- paste(TX_LA$LOCATION_ADDRESS, TX_LA$LOCATION_NEAREST_CITY, TX_LA$LOCATION_STATE, TX_LA$LOCATION_ZIP, sep = ", ")
RefMatch_CAS_Abv <- TX_LA %>% select(DOC_CTRL_NUM,
triAddress,
LocationAddress,
TRI_FACILITY_ID,
YEAR,
CHEMICAL,
FACILITY_NAME_,
`5.1_FUGITIVE_AIR`,
`5.2_STACK_AIR`,
`5.3_WATER`,
TOTAL_RELEASES,
`8.8_ONE-TIME_RELEASE`,
ZIP,
STREET_ADDRESS,
SEQNOS,
DATE_TIME_RECEIVED,
RESPONSIBLE_COMPANY,
RESPONSIBLE_ZIP,
LOCATION_ADDRESS,
DESCRIPTION_OF_INCIDENT,
NAME_OF_MATERIAL.x,
AMOUNT_OF_MATERIAL,
UNIT_OF_MEASURE.x,
INCIDENT_CAUSE,
DESC_REMEDIAL_ACTION,
ADDITIONAL_INFO,
MEDIUM_DESC)
OneTime <- c("HURRICANE", "NATURAL PHENOMENON")
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(RefMatch_CAS_Abv$INCIDENT_CAUSE %in% OneTime & is.na(RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE`) |
RefMatch_CAS_Abv$`8.8_ONE-TIME_RELEASE` < RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL,1,0)
RefMatch_CAS_Abv$Sec8.8_Error <- ifelse(is.na(RefMatch_CAS_Abv$Sec8.8_Error), 0, RefMatch_CAS_Abv$Sec8.8_Error)
RefMatch_CAS_Abv$Air_Error <- ifelse(RefMatch_CAS_Abv$MEDIUM_DESC == "AIR" &
RefMatch_CAS_Abv$AMOUNT_OF_MATERIAL > (RefMatch_CAS_Abv$`5.1_FUGITIVE_AIR` + RefMatch_CAS_Abv$`5.2_STACK_AIR`)
,1,0)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Sec8.8_Error == 1, "Sec8.8", NA)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1, "Air Release",RefMatch_CAS_Abv$Error)
RefMatch_CAS_Abv$Error <- ifelse(RefMatch_CAS_Abv$Air_Error == 1 & RefMatch_CAS_Abv$Sec8.8_Error == 1, "Air Release, Sec8.8", RefMatch_CAS_Abv$Error)
View(RefMatch_CAS_Abv)
PR <- aspills %>% filter(RESPONSIBLE_STATE == "PR")
PRv <- PR %>% select(RESPONSIBLE_COMPANY, DATE_TIME_RECEIVED, DESCRIPTION_OF_INCIDENT)
View(PRv)
PRv <- PR %>% select(RESPONSIBLE_COMPANY, DATE_TIME_RECEIVED, DESCRIPTION_OF_INCIDENT, AMOUNT_OF_MATERIAL)
View(StoriesAll)
Mercury <- StoriesAll %>% filter(`CHEMICAL NAME` == "MERCURY")
View(Mercury)
StoriesAll <- dfv %>% group_by(TRIFID, `CHEMICAL NAME`) %>% summarise(trendCor_adjRel = cor(`QUANTITY RELEASED CURRENT YEAR ADJ`, `REPORTING YEAR`),
trendCor_adjWM = cor(totalWsize, `REPORTING YEAR`),
trendCor_INDEX = cor(`PROD RATIO/ACTIVITY INDEX`, `REPORTING YEAR`),
Volititiliy_adjRel = sd(`QUANTITY RELEASED CURRENT YEAR ADJ`, na.rm = T)/mean(`QUANTITY RELEASED CURRENT YEAR ADJ`, na.rm = T),
Volititiliy_adjWM = sd(totalWsize, na.rm = T)/mean(totalWsize, na.rm = T),
Volititiliy_Index = sd(`PROD RATIO/ACTIVITY INDEX`, na.rm = T)/mean(`PROD RATIO/ACTIVITY INDEX`, na.rm = T),
aveIndex = mean(`PROD RATIO/ACTIVITY INDEX`, na.rm =T),
changescore = sum(ChangeSumVar),
finalyearchem = max(`REPORTING YEAR`, na.rm = T),
closureM = sum(closedIND2rep_chem),
closure = sum(closedIND_chem),
totalSup_8.11 = sum(nchar(`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`), na.rm = T),
ChemYears = n_distinct(`REPORTING YEAR`),
P2chemscore = sum(P2_sucess_score),
M_waste = mean(totalWsize, na.rm = T)) %>% ungroup()
Mercury <- StoriesAll %>% filter(`CHEMICAL NAME` == "MERCURY") %>% filter(finalyearchem == "2016")
View(Mercury)
Mercury <- StoriesAll %>% filter(`CHEMICAL NAME` == "MERCURY" | `CHEMICAL NAME` == "MERCURY COMPOUNDS") %>% filter(finalyearchem == "2016")
View(Mercury)
p2plot.b <- function(TRIFID, chemicalName) {
t <- list(
family = "calibri",
size = 10)
x1 <-  TRIFID
x2 <-  chemicalName
pick <- dfv %>% filter(TRIFID == x1, `CHEMICAL NAME` == x2)
facName <- unique(pick$`FACILITY NAME`)
Chemical <- unique(pick$`CHEMICAL NAME`)
comments <- pick %>% select(`REPORTING YEAR`, `SECTION 9 MISCELLANEOUS INFORMATION`,
`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`) %>% filter(!is.na(`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`))
print(comments$`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`)
print(tools::toTitleCase(tolower(facName)))
print(x1)
print(tools::toTitleCase(tolower(Chemical)))
#print(dfTS %>% filter(`NAICS Code` == pick$`PRIMARY NAICS CODE`[1]) %>% pull(unique(`NAICS Description`)))
print(pick$`PUBLIC CONTACT EMAIL`[1])
x <- plot_ly(data = pick, x = ~`REPORTING YEAR`, y = ~`QUANTITY RELEASED CURRENT YEAR`, type = "bar", name = "Released", marker = list(color = "#B73340")) %>%
#add_trace(y = ~`QUANTITY RELEASED CURRENT YEAR`, type = "scatter", mode = "lines", name = "Released", text = ~`SECTION 9 MISCELLANEOUS INFORMATION`)%>%
add_trace(y = ~`QUANTITY RECYCLED ONSITE CURRENT YEAR`+`QUANTITY RECYCLED OFFSITE CURRENT YEAR`, type = "bar", name = "Recycled", marker = list(color = "#019E73"))%>%
add_trace(y = ~`QUANTITY TREATED ONSITE CURRENT YEAR`+`QUANTITY TREATED OFFSITE CURRENT YEAR`, type = "bar", name = "Treated", marker = list(color = "#E6C657"))%>%
add_trace(y = ~`ENERGY RECOVERY ONSITE CURRENT YEAR`+`ENERGY RECOVERY OFFSITE CURRENT YEAR`, type = "bar", name = "E-Recovered", marker = list(color = "#57B4DF"))%>%
#add_trace(y = ~totWM_na, name = "Total PRWM") %>%
#add_trace(y = ~totalWsize, name = "Total PRW ADJ") %>%
add_trace(data = filter(pick,  P2_any == 1), inherit = F, y = ~1*P2_any,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers", marker = list(size = 20, color = "#000000"), name = "P2 Action Year",
text = ~`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`) %>%
add_trace(data = filter(pick,  P2Stamina1_25_a_con == 1), inherit = F, y = ~1*P2Stamina1_25_a_con,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers",marker = list(size = 15, color = "#9900ff"), name = "P2 PRW Success Year") %>%
add_trace(data = filter(pick,  P2_Stamina25_wa_CHEM == 1), inherit = F, y = ~1*P2_Stamina25_wa_CHEM,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers",marker = list(size = 8, color = "d3d3d3"), name = "P2 Release Success Year") %>%
layout(yaxis = list(title = "Pounds"),
xaxis = list(title = "Reporting Year", autotick = FALSE),
font = t,
barmode = 'stack',
title = paste("P2 Success Story Example", tools::toTitleCase(tolower(facName)), tools::toTitleCase(tolower(Chemical)), sep = ": "),
margin = list(l = 50, r = 50, t = 50, b = 50))
return(x)
}
p2plot.b("54469VLCNMSTATE", "MERCURY COMPOUNDS")
library(plotly)
p2plot.b("54469VLCNMSTATE", "MERCURY COMPOUNDS")
p2plot.b("54469VLCNMSTATE", "MERCURY COMPOUNDS")
pick <- dfv %>% filter(TRIFID == "54469VLCNMSTATE", `CHEMICAL NAME` == "MERCURY COMPOUNDS")
x <- plot_ly(data = pick, x = ~`REPORTING YEAR`, y = ~`QUANTITY RELEASED CURRENT YEAR`, type = "bar", name = "Released", marker = list(color = "#B73340")) %>%
#add_trace(y = ~`QUANTITY RELEASED CURRENT YEAR`, type = "scatter", mode = "lines", name = "Released", text = ~`SECTION 9 MISCELLANEOUS INFORMATION`)%>%
add_trace(y = ~`QUANTITY RECYCLED ONSITE CURRENT YEAR`+`QUANTITY RECYCLED OFFSITE CURRENT YEAR`, type = "bar", name = "Recycled", marker = list(color = "#019E73"))%>%
add_trace(y = ~`QUANTITY TREATED ONSITE CURRENT YEAR`+`QUANTITY TREATED OFFSITE CURRENT YEAR`, type = "bar", name = "Treated", marker = list(color = "#E6C657"))%>%
add_trace(y = ~`ENERGY RECOVERY ONSITE CURRENT YEAR`+`ENERGY RECOVERY OFFSITE CURRENT YEAR`, type = "bar", name = "E-Recovered", marker = list(color = "#57B4DF"))%>%
#add_trace(y = ~totWM_na, name = "Total PRWM") %>%
#add_trace(y = ~totalWsize, name = "Total PRW ADJ") %>%
add_trace(data = filter(pick,  P2_any == 1), inherit = F, y = ~1*P2_any,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers", marker = list(size = 20, color = "#000000"), name = "P2 Action Year",
text = ~`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`) %>%
add_trace(data = filter(pick,  P2Stamina1_25_a_con == 1), inherit = F, y = ~1*P2Stamina1_25_a_con,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers",marker = list(size = 15, color = "#9900ff"), name = "P2 PRW Success Year") %>%
add_trace(data = filter(pick,  P2_Stamina25_wa_CHEM == 1), inherit = F, y = ~1*P2_Stamina25_wa_CHEM,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers",marker = list(size = 8, color = "d3d3d3"), name = "P2 Release Success Year") %>%
layout(yaxis = list(title = "Pounds"),
xaxis = list(title = "Reporting Year", autotick = FALSE),
font = t,
barmode = 'stack',
title = paste("P2 Success Story Example", tools::toTitleCase(tolower(facName)), tools::toTitleCase(tolower(Chemical)), sep = ": "),
margin = list(l = 50, r = 50, t = 50, b = 50))
x <- plot_ly(data = pick, x = ~`REPORTING YEAR`, y = ~`QUANTITY RELEASED CURRENT YEAR`, type = "bar", name = "Released", marker = list(color = "#B73340")) %>%
#add_trace(y = ~`QUANTITY RELEASED CURRENT YEAR`, type = "scatter", mode = "lines", name = "Released", text = ~`SECTION 9 MISCELLANEOUS INFORMATION`)%>%
add_trace(y = ~`QUANTITY RECYCLED ONSITE CURRENT YEAR`+`QUANTITY RECYCLED OFFSITE CURRENT YEAR`, type = "bar", name = "Recycled", marker = list(color = "#019E73"))%>%
add_trace(y = ~`QUANTITY TREATED ONSITE CURRENT YEAR`+`QUANTITY TREATED OFFSITE CURRENT YEAR`, type = "bar", name = "Treated", marker = list(color = "#E6C657"))%>%
add_trace(y = ~`ENERGY RECOVERY ONSITE CURRENT YEAR`+`ENERGY RECOVERY OFFSITE CURRENT YEAR`, type = "bar", name = "E-Recovered", marker = list(color = "#57B4DF"))%>%
#add_trace(y = ~totWM_na, name = "Total PRWM") %>%
#add_trace(y = ~totalWsize, name = "Total PRW ADJ") %>%
add_trace(data = filter(pick,  P2_any == 1), inherit = F, y = ~1*P2_any,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers", marker = list(size = 20, color = "#000000"), name = "P2 Action Year",
text = ~`SECTION 8.11 DISPOSAL OR OTHER RELEASES, SOURCE REDUCTION, AND RECYCLING ACTIVITIES`) %>%
add_trace(data = filter(pick,  P2Stamina1_25_a_con == 1), inherit = F, y = ~1*P2Stamina1_25_a_con,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers",marker = list(size = 15, color = "#9900ff"), name = "P2 PRW Success Year") %>%
add_trace(data = filter(pick,  P2_Stamina25_wa_CHEM == 1), inherit = F, y = ~1*P2_Stamina25_wa_CHEM,
x = ~`REPORTING YEAR`, type = "scatter", mode = "markers",marker = list(size = 8, color = "d3d3d3"), name = "P2 Release Success Year") %>%
layout(yaxis = list(title = "Pounds"),
xaxis = list(title = "Reporting Year", autotick = FALSE),
font = t,
barmode = 'stack',
#title = paste("P2 Success Story Example", tools::toTitleCase(tolower(facName)), tools::toTitleCase(tolower(Chemical)), sep = ": "),
margin = list(l = 50, r = 50, t = 50, b = 50))
plot_ly(x)
plotly(x)
x
install.packages("ggpubr")
install.packages("installr")
library(installr)
updateR()
shiny::runApp('GitHub/NYenviroScreen/NYenviroScreen-app')
runApp('GitHub/NYenviroScreen/NYenviroScreen-app')
int_tribe <- readRDS("interim_tribe_intersection.rds")
setwd("C:/Users/Mike Petroni/Documents/GitHub/NYenviroScreen")
int_tribe <- readRDS("interim_tribe_intersection.rds")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
setwd("C:/Users/Mike Petroni/Documents/GitHub/NYenviroScreen/NYenviroScreen-app")
int_tribe <- readRDS("interim_tribe_intersection.rds")
View(int_tribe)
library(dplyr)
library(readr)
library(readxl)
library(tigris)
library(tidycensus)
library(tidyr)
library(tidyverse)
library(sf)
#load API key
census_api_key("3b7f443116b03bdd7ce2f1ff3f2b117cfff19e69")
##
# Census shapfiles
##
## Source: https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html
nyblock_groups <- block_groups(state = "NY")
#grab the Urban Clusters and the Native American Blockgroups
urb_zones <- urban_areas()
tribe_areas <- native_areas()
int_tribe <- st_intersection(nyblock_groups_sf, tribe_areas_sf)
#convert to sf object
urb_zones_sf <- st_as_sf(urb_zones)
nyblock_groups_sf <- st_as_sf(nyblock_groups)
tribe_areas_sf <- st_as_sf(tribe_areas)
int_tribe <- st_intersection(nyblock_groups_sf, tribe_areas_sf)
attArea <- int_tribe %>%
mutate(area = st_area(.) %>% as.numeric())
library(lwgeom)
install.packages("sf")
library(lwgeom)
